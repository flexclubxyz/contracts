{
  "address": "0x36464170B31bC9c6c526fd5B0f8A37f92dc0E1C0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donationWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_goalName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_goalDescription",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_targetAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pooled",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "contributors",
          "type": "uint256"
        }
      ],
      "name": "GoalInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donationWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundsWithdrawn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGoalInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "pooled",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "contributors",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "pooled",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "contributors",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5c73a02ffe43276da2d34919857600bbfd182f6a3d7410d5830a5f243d2db3b2",
  "receipt": {
    "to": null,
    "from": "0x04333a1788a47068b9102D2d35695c312A0b312F",
    "contractAddress": "0x36464170B31bC9c6c526fd5B0f8A37f92dc0E1C0",
    "transactionIndex": 8,
    "gasUsed": "1539484",
    "logsBloom": "0x
    "blockHash": "0x102afb51c4e0afcc722a1d8898b00987cdb4bfa2d7bc3d6cc6392b34914b15c9",
    "transactionHash": "0x5c73a02ffe43276da2d34919857600bbfd182f6a3d7410d5830a5f243d2db3b2",
    "logs": [],
    "blockNumber": 16138289,
    "cumulativeGasUsed": "2552761",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x04333a1788a47068b9102D2d35695c312A0b312F",
    1729468799,
    "Devcon Fundraiser",
    "Raising funds for Ash to attend Devcon 2024",
    "1000000000000000"
  ],
  "numDeployments": 6,
  "solcInputHash": "71e7ee749f41fabe8cfa58f4e90bedf0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donationWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_goalName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_goalDescription\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_targetAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pooled\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contributors\",\"type\":\"uint256\"}],\"name\":\"GoalInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donationWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundsWithdrawn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGoalInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pooled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contributors\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pooled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contributors\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refund()\":{\"notice\":\"Allows users to refund their contribution and withdraw their deposited amount         provided the donation wallet hasn't withdrawn the funds yet.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Flexclub003.sol\":\"FlexClub003\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/Flexclub003.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\ncontract FlexClub003 is ReentrancyGuard {\\n    struct Goal {\\n        string name;\\n        string description;\\n        uint256 pooled;\\n        uint256 target;\\n        uint256 deadline;\\n        uint256 contributors;\\n    }\\n\\n    mapping(address => uint256) public balances;\\n    mapping(address => bool) private hasContributed;\\n    Goal public goal;\\n    address public donationWallet;\\n    bool public fundsWithdrawn;\\n\\n    event Deposit(address indexed user, uint256 amount);\\n    event Withdrawal(address indexed recipient, uint256 amount);\\n    event GoalInfoUpdated(\\n        string name,\\n        string description,\\n        uint256 pooled,\\n        uint256 target,\\n        uint256 deadline,\\n        uint256 contributors\\n    );\\n\\n    constructor(\\n        address _donationWallet,\\n        uint256 _deadline,\\n        string memory _goalName,\\n        string memory _goalDescription,\\n        uint256 _targetAmount\\n    ) {\\n        require(_donationWallet != address(0), \\\"Invalid donation wallet address\\\");\\n        require(_deadline > block.timestamp, \\\"Deadline must be in the future\\\");\\n\\n        donationWallet = _donationWallet;\\n        goal = Goal(_goalName, _goalDescription, 0, _targetAmount, _deadline, 0);\\n        fundsWithdrawn = false;\\n    }\\n\\n    receive() external payable {\\n        _processDeposit();\\n    }\\n\\n    function deposit() public payable {\\n        _processDeposit();\\n    }\\n\\n    function _processDeposit() private nonReentrant {\\n        require(block.timestamp < goal.deadline, \\\"The deadline has passed\\\");\\n        require(msg.value > 0, \\\"Deposit amount must be greater than zero\\\");\\n        require(!fundsWithdrawn, \\\"Funds have already been withdrawn\\\");\\n\\n        balances[msg.sender] += msg.value;\\n        goal.pooled += msg.value;\\n\\n        // Update unique contributor count\\n        if (!hasContributed[msg.sender]) {\\n            hasContributed[msg.sender] = true;\\n            goal.contributors += 1;\\n        }\\n\\n        emit Deposit(msg.sender, msg.value);\\n        emit GoalInfoUpdated(\\n            goal.name,\\n            goal.description,\\n            goal.pooled,\\n            goal.target,\\n            goal.deadline,\\n            goal.contributors\\n        );\\n    }\\n\\n    function withdraw() public nonReentrant {\\n        require(msg.sender == donationWallet, \\\"Only the donation wallet can withdraw\\\");\\n        require(\\n            block.timestamp >= goal.deadline || goal.pooled >= goal.target,\\n            \\\"Cannot withdraw before deadline or target is reached\\\"\\n        );\\n        require(!fundsWithdrawn, \\\"Funds have already been withdrawn\\\");\\n        require(goal.pooled > 0, \\\"No funds to withdraw\\\");\\n\\n        fundsWithdrawn = true;\\n        uint256 amount = address(this).balance;\\n\\n        // Transfer the pooled ETH to the donation wallet\\n        (bool success, ) = donationWallet.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Transfer failed\\\");\\n\\n        emit Withdrawal(donationWallet, amount);\\n        emit GoalInfoUpdated(\\n            goal.name,\\n            goal.description,\\n            0, // Reset pooled amount to zero\\n            goal.target,\\n            goal.deadline,\\n            goal.contributors\\n        );\\n    }\\n\\n    /**\\n     * @notice Allows users to refund their contribution and withdraw their deposited amount\\n     *         provided the donation wallet hasn't withdrawn the funds yet.\\n     */\\n    function refund() public nonReentrant {\\n        require(!fundsWithdrawn, \\\"Funds have already been withdrawn\\\");\\n        uint256 userBalance = balances[msg.sender];\\n        require(userBalance > 0, \\\"No balance to withdraw\\\");\\n\\n        // Update state before transferring to prevent reentrancy attacks\\n        balances[msg.sender] = 0;\\n        goal.pooled -= userBalance;\\n\\n        // Transfer the user's ETH back\\n        (bool success, ) = msg.sender.call{value: userBalance}(\\\"\\\");\\n        require(success, \\\"Transfer failed\\\");\\n\\n        emit Withdrawal(msg.sender, userBalance);\\n        emit GoalInfoUpdated(\\n            goal.name,\\n            goal.description,\\n            goal.pooled,\\n            goal.target,\\n            goal.deadline,\\n            goal.contributors\\n        );\\n    }\\n\\n    function getGoalInfo()\\n        public\\n        view\\n        returns (\\n            string memory name,\\n            string memory description,\\n            uint256 pooled,\\n            uint256 target,\\n            uint256 deadline,\\n            uint256 contributors\\n        )\\n    {\\n        return (\\n            goal.name,\\n            goal.description,\\n            goal.pooled,\\n            goal.target,\\n            goal.deadline,\\n            goal.contributors\\n        );\\n    }\\n}\",\"keccak256\":\"0xb9a1b1c257a979e6b25c0c10ea56e8983d1fb7ce365b22667b14491a212f0f27\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620020113803806200201183398181016040528101906200003791906200041c565b6001600081905550600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603620000b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a89062000543565b60405180910390fd5b428411620000f6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ed90620005b5565b60405180910390fd5b84600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060c00160405280848152602001838152602001600081526020018281526020018581526020016000815250600360008201518160000190816200017f919062000818565b50602082015181600101908162000197919062000818565b5060408201518160020155606082015181600301556080820151816004015560a082015181600501559050506000600960146101000a81548160ff0219169083151502179055505050505050620008ff565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022a82620001fd565b9050919050565b6200023c816200021d565b81146200024857600080fd5b50565b6000815190506200025c8162000231565b92915050565b6000819050919050565b620002778162000262565b81146200028357600080fd5b50565b60008151905062000297816200026c565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002f282620002a7565b810181811067ffffffffffffffff82111715620003145762000313620002b8565b5b80604052505050565b600062000329620001e9565b9050620003378282620002e7565b919050565b600067ffffffffffffffff8211156200035a5762000359620002b8565b5b6200036582620002a7565b9050602081019050919050565b60005b838110156200039257808201518184015260208101905062000375565b60008484015250505050565b6000620003b5620003af846200033c565b6200031d565b905082815260208101848484011115620003d457620003d3620002a2565b5b620003e184828562000372565b509392505050565b600082601f8301126200040157620004006200029d565b5b8151620004138482602086016200039e565b91505092915050565b600080600080600060a086880312156200043b576200043a620001f3565b5b60006200044b888289016200024b565b95505060206200045e8882890162000286565b945050604086015167ffffffffffffffff811115620004825762000481620001f8565b5b6200049088828901620003e9565b935050606086015167ffffffffffffffff811115620004b457620004b3620001f8565b5b620004c288828901620003e9565b9250506080620004d58882890162000286565b9150509295509295909350565b600082825260208201905092915050565b7f496e76616c696420646f6e6174696f6e2077616c6c6574206164647265737300600082015250565b60006200052b601f83620004e2565b91506200053882620004f3565b602082019050919050565b600060208201905081810360008301526200055e816200051c565b9050919050565b7f446561646c696e65206d75737420626520696e20746865206675747572650000600082015250565b60006200059d601e83620004e2565b9150620005aa8262000565565b602082019050919050565b60006020820190508181036000830152620005d0816200058e565b9050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200062a57607f821691505b60208210810362000640576200063f620005e2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006aa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200066b565b620006b686836200066b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006f9620006f3620006ed8462000262565b620006ce565b62000262565b9050919050565b6000819050919050565b6200071583620006d8565b6200072d620007248262000700565b84845462000678565b825550505050565b600090565b6200074462000735565b620007518184846200070a565b505050565b5b8181101562000779576200076d6000826200073a565b60018101905062000757565b5050565b601f821115620007c857620007928162000646565b6200079d846200065b565b81016020851015620007ad578190505b620007c5620007bc856200065b565b83018262000756565b50505b505050565b600082821c905092915050565b6000620007ed60001984600802620007cd565b1980831691505092915050565b6000620008088383620007da565b9150826002028217905092915050565b6200082382620005d7565b67ffffffffffffffff8111156200083f576200083e620002b8565b5b6200084b825462000611565b620008588282856200077d565b600060209050601f8311600181146200089057600084156200087b578287015190505b620008878582620007fa565b865550620008f7565b601f198416620008a08662000646565b60005b82811015620008ca57848901518255600182019150602085019450602081019050620008a3565b86831015620008ea5784890151620008e6601f891682620007da565b8355505b6001600288020188555050505b505050505050565b611702806200090f6000396000f3fe60806040526004361061007f5760003560e01c8063590e1ae31161004e578063590e1ae314610147578063ac307fcf1461015e578063d0e30db014610189578063e7b94df4146101935761008e565b806327e235e31461009357806336546779146100d05780633ccfd60b1461010057806340193883146101175761008e565b3661008e5761008c6101be565b005b600080fd5b34801561009f57600080fd5b506100ba60048036038101906100b59190610e1b565b61048d565b6040516100c79190610e61565b60405180910390f35b3480156100dc57600080fd5b506100e56104a5565b6040516100f796959493929190610f0c565b60405180910390f35b34801561010c57600080fd5b506101156105fb565b005b34801561012357600080fd5b5061012c610949565b60405161013e96959493929190610f0c565b60405180910390f35b34801561015357600080fd5b5061015c610a83565b005b34801561016a57600080fd5b50610173610d25565b6040516101809190610f96565b60405180910390f35b610191610d38565b005b34801561019f57600080fd5b506101a8610d42565b6040516101b59190610fc0565b60405180910390f35b6101c6610d68565b600360040154421061020d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020490611027565b60405180910390fd5b60003411610250576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610247906110b9565b60405180910390fd5b600960149054906101000a900460ff16156102a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102979061114b565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ef919061119a565b92505081905550346003600201600082825461030b919061119a565b92505081905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166103d9576001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600360050160008282546103d1919061119a565b925050819055505b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3460405161041f9190610e61565b60405180910390a27fb70e35250ee178bb4f1191f2f3505d4c9b6f49f3a3aec82207506168daf9cbbf60036000016003600101600360020154600380015460036004015460036005015460405161047b969594939291906112c7565b60405180910390a161048b610dae565b565b60016020528060005260406000206000915090505481565b6060806000806000806003600001600360010160036002015460038001546003600401546003600501548580546104db906111fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610507906111fd565b80156105545780601f1061052957610100808354040283529160200191610554565b820191906000526020600020905b81548152906001019060200180831161053757829003601f168201915b50505050509550848054610567906111fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610593906111fd565b80156105e05780601f106105b5576101008083540402835291602001916105e0565b820191906000526020600020905b8154815290600101906020018083116105c357829003601f168201915b50505050509450955095509550955095509550909192939495565b610603610d68565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a906113a8565b60405180910390fd5b600360040154421015806106b05750600380015460036002015410155b6106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e69061143a565b60405180910390fd5b600960149054906101000a900460ff161561073f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107369061114b565b60405180910390fd5b600060036002015411610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e906114a6565b60405180910390fd5b6001600960146101000a81548160ff02191690831515021790555060004790506000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516107ef906114f7565b60006040518083038185875af1925050503d806000811461082c576040519150601f19603f3d011682016040523d82523d6000602084013e610831565b606091505b5050905080610875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086c90611558565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65836040516108dd9190610e61565b60405180910390a27fb70e35250ee178bb4f1191f2f3505d4c9b6f49f3a3aec82207506168daf9cbbf6003600001600360010160006003800154600360040154600360050154604051610935969594939291906115bd565b60405180910390a15050610947610dae565b565b600380600001805461095a906111fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610986906111fd565b80156109d35780601f106109a8576101008083540402835291602001916109d3565b820191906000526020600020905b8154815290600101906020018083116109b657829003601f168201915b5050505050908060010180546109e8906111fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610a14906111fd565b8015610a615780601f10610a3657610100808354040283529160200191610a61565b820191906000526020600020905b815481529060010190602001808311610a4457829003601f168201915b5050505050908060020154908060030154908060040154908060050154905086565b610a8b610d68565b600960149054906101000a900460ff1615610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad29061114b565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610b62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5990611678565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508060036002016000828254610bbc9190611698565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610be9906114f7565b60006040518083038185875af1925050503d8060008114610c26576040519150601f19603f3d011682016040523d82523d6000602084013e610c2b565b606091505b5050905080610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6690611558565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6583604051610cb59190610e61565b60405180910390a27fb70e35250ee178bb4f1191f2f3505d4c9b6f49f3a3aec82207506168daf9cbbf600360000160036001016003600201546003800154600360040154600360050154604051610d11969594939291906112c7565b60405180910390a15050610d23610dae565b565b600960149054906101000a900460ff1681565b610d406101be565b565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260005403610da4576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610de882610dbd565b9050919050565b610df881610ddd565b8114610e0357600080fd5b50565b600081359050610e1581610def565b92915050565b600060208284031215610e3157610e30610db8565b5b6000610e3f84828501610e06565b91505092915050565b6000819050919050565b610e5b81610e48565b82525050565b6000602082019050610e766000830184610e52565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610eb6578082015181840152602081019050610e9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ede82610e7c565b610ee88185610e87565b9350610ef8818560208601610e98565b610f0181610ec2565b840191505092915050565b600060c0820190508181036000830152610f268189610ed3565b90508181036020830152610f3a8188610ed3565b9050610f496040830187610e52565b610f566060830186610e52565b610f636080830185610e52565b610f7060a0830184610e52565b979650505050505050565b60008115159050919050565b610f9081610f7b565b82525050565b6000602082019050610fab6000830184610f87565b92915050565b610fba81610ddd565b82525050565b6000602082019050610fd56000830184610fb1565b92915050565b7f54686520646561646c696e652068617320706173736564000000000000000000600082015250565b6000611011601783610e87565b915061101c82610fdb565b602082019050919050565b6000602082019050818103600083015261104081611004565b9050919050565b7f4465706f73697420616d6f756e74206d7573742062652067726561746572207460008201527f68616e207a65726f000000000000000000000000000000000000000000000000602082015250565b60006110a3602883610e87565b91506110ae82611047565b604082019050919050565b600060208201905081810360008301526110d281611096565b9050919050565b7f46756e6473206861766520616c7265616479206265656e20776974686472617760008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000611135602183610e87565b9150611140826110d9565b604082019050919050565b6000602082019050818103600083015261116481611128565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111a582610e48565b91506111b083610e48565b92508282019050808211156111c8576111c761116b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061121557607f821691505b602082108103611228576112276111ce565b5b50919050565b60008190508160005260206000209050919050565b60008154611250816111fd565b61125a8186610e87565b94506001821660008114611275576001811461128b576112be565b60ff1983168652811515602002860193506112be565b6112948561122e565b60005b838110156112b657815481890152600182019150602081019050611297565b808801955050505b50505092915050565b600060c08201905081810360008301526112e18189611243565b905081810360208301526112f58188611243565b90506113046040830187610e52565b6113116060830186610e52565b61131e6080830185610e52565b61132b60a0830184610e52565b979650505050505050565b7f4f6e6c792074686520646f6e6174696f6e2077616c6c65742063616e2077697460008201527f6864726177000000000000000000000000000000000000000000000000000000602082015250565b6000611392602583610e87565b915061139d82611336565b604082019050919050565b600060208201905081810360008301526113c181611385565b9050919050565b7f43616e6e6f74207769746864726177206265666f726520646561646c696e652060008201527f6f72207461726765742069732072656163686564000000000000000000000000602082015250565b6000611424603483610e87565b915061142f826113c8565b604082019050919050565b6000602082019050818103600083015261145381611417565b9050919050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b6000611490601483610e87565b915061149b8261145a565b602082019050919050565b600060208201905081810360008301526114bf81611483565b9050919050565b600081905092915050565b50565b60006114e16000836114c6565b91506114ec826114d1565b600082019050919050565b6000611502826114d4565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000611542600f83610e87565b915061154d8261150c565b602082019050919050565b6000602082019050818103600083015261157181611535565b9050919050565b6000819050919050565b6000819050919050565b60006115a76115a261159d84611578565b611582565b610e48565b9050919050565b6115b78161158c565b82525050565b600060c08201905081810360008301526115d78189611243565b905081810360208301526115eb8188611243565b90506115fa60408301876115ae565b6116076060830186610e52565b6116146080830185610e52565b61162160a0830184610e52565b979650505050505050565b7f4e6f2062616c616e636520746f20776974686472617700000000000000000000600082015250565b6000611662601683610e87565b915061166d8261162c565b602082019050919050565b6000602082019050818103600083015261169181611655565b9050919050565b60006116a382610e48565b91506116ae83610e48565b92508282039050818111156116c6576116c561116b565b5b9291505056fea26469706673582212207ef70cf9766ac164723c8dcbec2f063495103c2eeab6374ca82d40e85267f22f64736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063590e1ae31161004e578063590e1ae314610147578063ac307fcf1461015e578063d0e30db014610189578063e7b94df4146101935761008e565b806327e235e31461009357806336546779146100d05780633ccfd60b1461010057806340193883146101175761008e565b3661008e5761008c6101be565b005b600080fd5b34801561009f57600080fd5b506100ba60048036038101906100b59190610e1b565b61048d565b6040516100c79190610e61565b60405180910390f35b3480156100dc57600080fd5b506100e56104a5565b6040516100f796959493929190610f0c565b60405180910390f35b34801561010c57600080fd5b506101156105fb565b005b34801561012357600080fd5b5061012c610949565b60405161013e96959493929190610f0c565b60405180910390f35b34801561015357600080fd5b5061015c610a83565b005b34801561016a57600080fd5b50610173610d25565b6040516101809190610f96565b60405180910390f35b610191610d38565b005b34801561019f57600080fd5b506101a8610d42565b6040516101b59190610fc0565b60405180910390f35b6101c6610d68565b600360040154421061020d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020490611027565b60405180910390fd5b60003411610250576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610247906110b9565b60405180910390fd5b600960149054906101000a900460ff16156102a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102979061114b565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ef919061119a565b92505081905550346003600201600082825461030b919061119a565b92505081905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166103d9576001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600360050160008282546103d1919061119a565b925050819055505b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3460405161041f9190610e61565b60405180910390a27fb70e35250ee178bb4f1191f2f3505d4c9b6f49f3a3aec82207506168daf9cbbf60036000016003600101600360020154600380015460036004015460036005015460405161047b969594939291906112c7565b60405180910390a161048b610dae565b565b60016020528060005260406000206000915090505481565b6060806000806000806003600001600360010160036002015460038001546003600401546003600501548580546104db906111fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610507906111fd565b80156105545780601f1061052957610100808354040283529160200191610554565b820191906000526020600020905b81548152906001019060200180831161053757829003601f168201915b50505050509550848054610567906111fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610593906111fd565b80156105e05780601f106105b5576101008083540402835291602001916105e0565b820191906000526020600020905b8154815290600101906020018083116105c357829003601f168201915b50505050509450955095509550955095509550909192939495565b610603610d68565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a906113a8565b60405180910390fd5b600360040154421015806106b05750600380015460036002015410155b6106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e69061143a565b60405180910390fd5b600960149054906101000a900460ff161561073f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107369061114b565b60405180910390fd5b600060036002015411610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e906114a6565b60405180910390fd5b6001600960146101000a81548160ff02191690831515021790555060004790506000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516107ef906114f7565b60006040518083038185875af1925050503d806000811461082c576040519150601f19603f3d011682016040523d82523d6000602084013e610831565b606091505b5050905080610875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086c90611558565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65836040516108dd9190610e61565b60405180910390a27fb70e35250ee178bb4f1191f2f3505d4c9b6f49f3a3aec82207506168daf9cbbf6003600001600360010160006003800154600360040154600360050154604051610935969594939291906115bd565b60405180910390a15050610947610dae565b565b600380600001805461095a906111fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610986906111fd565b80156109d35780601f106109a8576101008083540402835291602001916109d3565b820191906000526020600020905b8154815290600101906020018083116109b657829003601f168201915b5050505050908060010180546109e8906111fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610a14906111fd565b8015610a615780601f10610a3657610100808354040283529160200191610a61565b820191906000526020600020905b815481529060010190602001808311610a4457829003601f168201915b5050505050908060020154908060030154908060040154908060050154905086565b610a8b610d68565b600960149054906101000a900460ff1615610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad29061114b565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610b62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5990611678565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508060036002016000828254610bbc9190611698565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610be9906114f7565b60006040518083038185875af1925050503d8060008114610c26576040519150601f19603f3d011682016040523d82523d6000602084013e610c2b565b606091505b5050905080610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6690611558565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6583604051610cb59190610e61565b60405180910390a27fb70e35250ee178bb4f1191f2f3505d4c9b6f49f3a3aec82207506168daf9cbbf600360000160036001016003600201546003800154600360040154600360050154604051610d11969594939291906112c7565b60405180910390a15050610d23610dae565b565b600960149054906101000a900460ff1681565b610d406101be565b565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260005403610da4576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610de882610dbd565b9050919050565b610df881610ddd565b8114610e0357600080fd5b50565b600081359050610e1581610def565b92915050565b600060208284031215610e3157610e30610db8565b5b6000610e3f84828501610e06565b91505092915050565b6000819050919050565b610e5b81610e48565b82525050565b6000602082019050610e766000830184610e52565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610eb6578082015181840152602081019050610e9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ede82610e7c565b610ee88185610e87565b9350610ef8818560208601610e98565b610f0181610ec2565b840191505092915050565b600060c0820190508181036000830152610f268189610ed3565b90508181036020830152610f3a8188610ed3565b9050610f496040830187610e52565b610f566060830186610e52565b610f636080830185610e52565b610f7060a0830184610e52565b979650505050505050565b60008115159050919050565b610f9081610f7b565b82525050565b6000602082019050610fab6000830184610f87565b92915050565b610fba81610ddd565b82525050565b6000602082019050610fd56000830184610fb1565b92915050565b7f54686520646561646c696e652068617320706173736564000000000000000000600082015250565b6000611011601783610e87565b915061101c82610fdb565b602082019050919050565b6000602082019050818103600083015261104081611004565b9050919050565b7f4465706f73697420616d6f756e74206d7573742062652067726561746572207460008201527f68616e207a65726f000000000000000000000000000000000000000000000000602082015250565b60006110a3602883610e87565b91506110ae82611047565b604082019050919050565b600060208201905081810360008301526110d281611096565b9050919050565b7f46756e6473206861766520616c7265616479206265656e20776974686472617760008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000611135602183610e87565b9150611140826110d9565b604082019050919050565b6000602082019050818103600083015261116481611128565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111a582610e48565b91506111b083610e48565b92508282019050808211156111c8576111c761116b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061121557607f821691505b602082108103611228576112276111ce565b5b50919050565b60008190508160005260206000209050919050565b60008154611250816111fd565b61125a8186610e87565b94506001821660008114611275576001811461128b576112be565b60ff1983168652811515602002860193506112be565b6112948561122e565b60005b838110156112b657815481890152600182019150602081019050611297565b808801955050505b50505092915050565b600060c08201905081810360008301526112e18189611243565b905081810360208301526112f58188611243565b90506113046040830187610e52565b6113116060830186610e52565b61131e6080830185610e52565b61132b60a0830184610e52565b979650505050505050565b7f4f6e6c792074686520646f6e6174696f6e2077616c6c65742063616e2077697460008201527f6864726177000000000000000000000000000000000000000000000000000000602082015250565b6000611392602583610e87565b915061139d82611336565b604082019050919050565b600060208201905081810360008301526113c181611385565b9050919050565b7f43616e6e6f74207769746864726177206265666f726520646561646c696e652060008201527f6f72207461726765742069732072656163686564000000000000000000000000602082015250565b6000611424603483610e87565b915061142f826113c8565b604082019050919050565b6000602082019050818103600083015261145381611417565b9050919050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b6000611490601483610e87565b915061149b8261145a565b602082019050919050565b600060208201905081810360008301526114bf81611483565b9050919050565b600081905092915050565b50565b60006114e16000836114c6565b91506114ec826114d1565b600082019050919050565b6000611502826114d4565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000611542600f83610e87565b915061154d8261150c565b602082019050919050565b6000602082019050818103600083015261157181611535565b9050919050565b6000819050919050565b6000819050919050565b60006115a76115a261159d84611578565b611582565b610e48565b9050919050565b6115b78161158c565b82525050565b600060c08201905081810360008301526115d78189611243565b905081810360208301526115eb8188611243565b90506115fa60408301876115ae565b6116076060830186610e52565b6116146080830185610e52565b61162160a0830184610e52565b979650505050505050565b7f4e6f2062616c616e636520746f20776974686472617700000000000000000000600082015250565b6000611662601683610e87565b915061166d8261162c565b602082019050919050565b6000602082019050818103600083015261169181611655565b9050919050565b60006116a382610e48565b91506116ae83610e48565b92508282039050818111156116c6576116c561116b565b5b9291505056fea26469706673582212207ef70cf9766ac164723c8dcbec2f063495103c2eeab6374ca82d40e85267f22f64736f6c63430008140033",
  "devdoc": {
    "errors": {
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "refund()": {
        "notice": "Allows users to refund their contribution and withdraw their deposited amount         provided the donation wallet hasn't withdrawn the funds yet."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/Flexclub003.sol:FlexClub003",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 90,
        "contract": "contracts/Flexclub003.sol:FlexClub003",
        "label": "balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 94,
        "contract": "contracts/Flexclub003.sol:FlexClub003",
        "label": "hasContributed",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 97,
        "contract": "contracts/Flexclub003.sol:FlexClub003",
        "label": "goal",
        "offset": 0,
        "slot": "3",
        "type": "t_struct(Goal)86_storage"
      },
      {
        "astId": 99,
        "contract": "contracts/Flexclub003.sol:FlexClub003",
        "label": "donationWallet",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 101,
        "contract": "contracts/Flexclub003.sol:FlexClub003",
        "label": "fundsWithdrawn",
        "offset": 20,
        "slot": "9",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Goal)86_storage": {
        "encoding": "inplace",
        "label": "struct FlexClub003.Goal",
        "members": [
          {
            "astId": 75,
            "contract": "contracts/Flexclub003.sol:FlexClub003",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 77,
            "contract": "contracts/Flexclub003.sol:FlexClub003",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 79,
            "contract": "contracts/Flexclub003.sol:FlexClub003",
            "label": "pooled",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 81,
            "contract": "contracts/Flexclub003.sol:FlexClub003",
            "label": "target",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 83,
            "contract": "contracts/Flexclub003.sol:FlexClub003",
            "label": "deadline",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 85,
            "contract": "contracts/Flexclub003.sol:FlexClub003",
            "label": "contributors",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}